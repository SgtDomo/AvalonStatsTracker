#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Avalon_Stats
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="avalon_stats")]
	public partial class AvalonDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGameRole(GameRole instance);
    partial void UpdateGameRole(GameRole instance);
    partial void DeleteGameRole(GameRole instance);
    partial void InsertParticipation(Participation instance);
    partial void UpdateParticipation(Participation instance);
    partial void DeleteParticipation(Participation instance);
    partial void InsertGame(Game instance);
    partial void UpdateGame(Game instance);
    partial void DeleteGame(Game instance);
    partial void InsertGameView(GameView instance);
    partial void UpdateGameView(GameView instance);
    partial void DeleteGameView(GameView instance);
    partial void InsertPlayer(Player instance);
    partial void UpdatePlayer(Player instance);
    partial void DeletePlayer(Player instance);
    #endregion
		
		public AvalonDBDataContext() : 
				base(global::Avalon_Stats.Properties.Settings.Default.avalon_statsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AvalonDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvalonDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvalonDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvalonDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GameRole> GameRoles
		{
			get
			{
				return this.GetTable<GameRole>();
			}
		}
		
		public System.Data.Linq.Table<Participation> Participations
		{
			get
			{
				return this.GetTable<Participation>();
			}
		}
		
		public System.Data.Linq.Table<Game> Games
		{
			get
			{
				return this.GetTable<Game>();
			}
		}
		
		public System.Data.Linq.Table<GameView> GameViews
		{
			get
			{
				return this.GetTable<GameView>();
			}
		}
		
		public System.Data.Linq.Table<Player> Players
		{
			get
			{
				return this.GetTable<Player>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gameRole")]
	public partial class GameRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _roleShortcut;
		
		private bool _side;
		
		private string _fullName;
		
		private EntitySet<Participation> _Participations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleShortcutChanging(string value);
    partial void OnRoleShortcutChanged();
    partial void OnSideChanging(bool value);
    partial void OnSideChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    #endregion
		
		public GameRole()
		{
			this._Participations = new EntitySet<Participation>(new Action<Participation>(this.attach_Participations), new Action<Participation>(this.detach_Participations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="roleShortcut", Storage="_roleShortcut", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleShortcut
		{
			get
			{
				return this._roleShortcut;
			}
			set
			{
				if ((this._roleShortcut != value))
				{
					this.OnRoleShortcutChanging(value);
					this.SendPropertyChanging();
					this._roleShortcut = value;
					this.SendPropertyChanged("RoleShortcut");
					this.OnRoleShortcutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="side", Storage="_side", DbType="Bit NOT NULL")]
		public bool Side
		{
			get
			{
				return this._side;
			}
			set
			{
				if ((this._side != value))
				{
					this.OnSideChanging(value);
					this.SendPropertyChanging();
					this._side = value;
					this.SendPropertyChanged("Side");
					this.OnSideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fullName", Storage="_fullName", DbType="VarChar(32)")]
		public string FullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameRole_Participation", Storage="_Participations", ThisKey="RoleShortcut", OtherKey="RoleShortcut")]
		public EntitySet<Participation> Participations
		{
			get
			{
				return this._Participations;
			}
			set
			{
				this._Participations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Participations(Participation entity)
		{
			this.SendPropertyChanging();
			entity.GameRole = this;
		}
		
		private void detach_Participations(Participation entity)
		{
			this.SendPropertyChanging();
			entity.GameRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.participation")]
	public partial class Participation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gameId;
		
		private string _playerName;
		
		private string _roleShortcut;
		
		private EntityRef<GameRole> _GameRole;
		
		private EntityRef<Game> _game;
		
		private EntityRef<GameView> _gameView;
		
		private EntityRef<Player> _Player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameIdChanging(int value);
    partial void OnGameIdChanged();
    partial void OnPlayerNameChanging(string value);
    partial void OnPlayerNameChanged();
    partial void OnRoleShortcutChanging(string value);
    partial void OnRoleShortcutChanged();
    #endregion
		
		public Participation()
		{
			this._GameRole = default(EntityRef<GameRole>);
			this._game = default(EntityRef<Game>);
			this._gameView = default(EntityRef<GameView>);
			this._Player = default(EntityRef<Player>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gameId", Storage="_gameId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GameId
		{
			get
			{
				return this._gameId;
			}
			set
			{
				if ((this._gameId != value))
				{
					this.OnGameIdChanging(value);
					this.SendPropertyChanging();
					this._gameId = value;
					this.SendPropertyChanged("GameId");
					this.OnGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="playerName", Storage="_playerName", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PlayerName
		{
			get
			{
				return this._playerName;
			}
			set
			{
				if ((this._playerName != value))
				{
					this.OnPlayerNameChanging(value);
					this.SendPropertyChanging();
					this._playerName = value;
					this.SendPropertyChanged("PlayerName");
					this.OnPlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="roleShortcut", Storage="_roleShortcut", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string RoleShortcut
		{
			get
			{
				return this._roleShortcut;
			}
			set
			{
				if ((this._roleShortcut != value))
				{
					this.OnRoleShortcutChanging(value);
					this.SendPropertyChanging();
					this._roleShortcut = value;
					this.SendPropertyChanged("RoleShortcut");
					this.OnRoleShortcutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameRole_Participation", Storage="_GameRole", ThisKey="RoleShortcut", OtherKey="RoleShortcut", IsForeignKey=true)]
		public GameRole GameRole
		{
			get
			{
				return this._GameRole.Entity;
			}
			set
			{
				GameRole previousValue = this._GameRole.Entity;
				if (((previousValue != value) 
							|| (this._GameRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameRole.Entity = null;
						previousValue.Participations.Remove(this);
					}
					this._GameRole.Entity = value;
					if ((value != null))
					{
						value.Participations.Add(this);
						this._roleShortcut = value.RoleShortcut;
					}
					else
					{
						this._roleShortcut = default(string);
					}
					this.SendPropertyChanged("GameRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_Participation", Storage="_game", ThisKey="GameId", OtherKey="GameId", IsForeignKey=true)]
		public Game Game
		{
			get
			{
				return this._game.Entity;
			}
			set
			{
				Game previousValue = this._game.Entity;
				if (((previousValue != value) 
							|| (this._game.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._game.Entity = null;
						previousValue.Participations.Remove(this);
					}
					this._game.Entity = value;
					if ((value != null))
					{
						value.Participations.Add(this);
						this._gameId = value.GameId;
					}
					else
					{
						this._gameId = default(int);
					}
					this.SendPropertyChanged("Game");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameView_Participation", Storage="_gameView", ThisKey="GameId", OtherKey="GameId", IsForeignKey=true)]
		public GameView GameView
		{
			get
			{
				return this._gameView.Entity;
			}
			set
			{
				GameView previousValue = this._gameView.Entity;
				if (((previousValue != value) 
							|| (this._gameView.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._gameView.Entity = null;
						previousValue.Participations.Remove(this);
					}
					this._gameView.Entity = value;
					if ((value != null))
					{
						value.Participations.Add(this);
						this._gameId = value.GameId;
					}
					else
					{
						this._gameId = default(int);
					}
					this.SendPropertyChanged("GameView");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_Participation", Storage="_Player", ThisKey="PlayerName", OtherKey="PlayerName", IsForeignKey=true)]
		public Player Player
		{
			get
			{
				return this._Player.Entity;
			}
			set
			{
				Player previousValue = this._Player.Entity;
				if (((previousValue != value) 
							|| (this._Player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Player.Entity = null;
						previousValue.Participations.Remove(this);
					}
					this._Player.Entity = value;
					if ((value != null))
					{
						value.Participations.Add(this);
						this._playerName = value.PlayerName;
					}
					else
					{
						this._playerName = default(string);
					}
					this.SendPropertyChanged("Player");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.game")]
	public partial class Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GameId;
		
		private System.DateTime _GameTime;
		
		private bool _FirstMissionResult;
		
		private bool _SecondMissionResult;
		
		private bool _ThirdMissionResult;
		
		private System.Nullable<bool> _FourthMissionResult;
		
		private System.Nullable<bool> _FithMissionResult;
		
		private string _KilledPlayer;
		
		private EntitySet<Participation> _Participations;
		
		private EntityRef<Player> _Player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameIdChanging(int value);
    partial void OnGameIdChanged();
    partial void OnGameTimeChanging(System.DateTime value);
    partial void OnGameTimeChanged();
    partial void OnFirstMissionResultChanging(bool value);
    partial void OnFirstMissionResultChanged();
    partial void OnSecondMissionResultChanging(bool value);
    partial void OnSecondMissionResultChanged();
    partial void OnThirdMissionResultChanging(bool value);
    partial void OnThirdMissionResultChanged();
    partial void OnFourthMissionResultChanging(System.Nullable<bool> value);
    partial void OnFourthMissionResultChanged();
    partial void OnFithMissionResultChanging(System.Nullable<bool> value);
    partial void OnFithMissionResultChanged();
    partial void OnKilledPlayerChanging(string value);
    partial void OnKilledPlayerChanged();
    #endregion
		
		public Game()
		{
			this._Participations = new EntitySet<Participation>(new Action<Participation>(this.attach_Participations), new Action<Participation>(this.detach_Participations));
			this._Player = default(EntityRef<Player>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gameId", Storage="_GameId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GameId
		{
			get
			{
				return this._GameId;
			}
			set
			{
				if ((this._GameId != value))
				{
					this.OnGameIdChanging(value);
					this.SendPropertyChanging();
					this._GameId = value;
					this.SendPropertyChanged("GameId");
					this.OnGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gameTime", Storage="_GameTime", DbType="DateTime NOT NULL")]
		public System.DateTime GameTime
		{
			get
			{
				return this._GameTime;
			}
			set
			{
				if ((this._GameTime != value))
				{
					this.OnGameTimeChanging(value);
					this.SendPropertyChanging();
					this._GameTime = value;
					this.SendPropertyChanged("GameTime");
					this.OnGameTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="firstMissionResult", Storage="_FirstMissionResult", DbType="Bit NOT NULL")]
		public bool FirstMissionResult
		{
			get
			{
				return this._FirstMissionResult;
			}
			set
			{
				if ((this._FirstMissionResult != value))
				{
					this.OnFirstMissionResultChanging(value);
					this.SendPropertyChanging();
					this._FirstMissionResult = value;
					this.SendPropertyChanged("FirstMissionResult");
					this.OnFirstMissionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="secondMissionResult", Storage="_SecondMissionResult", DbType="Bit NOT NULL")]
		public bool SecondMissionResult
		{
			get
			{
				return this._SecondMissionResult;
			}
			set
			{
				if ((this._SecondMissionResult != value))
				{
					this.OnSecondMissionResultChanging(value);
					this.SendPropertyChanging();
					this._SecondMissionResult = value;
					this.SendPropertyChanged("SecondMissionResult");
					this.OnSecondMissionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="thirdMissionResult", Storage="_ThirdMissionResult", DbType="Bit NOT NULL")]
		public bool ThirdMissionResult
		{
			get
			{
				return this._ThirdMissionResult;
			}
			set
			{
				if ((this._ThirdMissionResult != value))
				{
					this.OnThirdMissionResultChanging(value);
					this.SendPropertyChanging();
					this._ThirdMissionResult = value;
					this.SendPropertyChanged("ThirdMissionResult");
					this.OnThirdMissionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fourthMissionResult", Storage="_FourthMissionResult", DbType="Bit")]
		public System.Nullable<bool> FourthMissionResult
		{
			get
			{
				return this._FourthMissionResult;
			}
			set
			{
				if ((this._FourthMissionResult != value))
				{
					this.OnFourthMissionResultChanging(value);
					this.SendPropertyChanging();
					this._FourthMissionResult = value;
					this.SendPropertyChanged("FourthMissionResult");
					this.OnFourthMissionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fithMissionResult", Storage="_FithMissionResult", DbType="Bit")]
		public System.Nullable<bool> FithMissionResult
		{
			get
			{
				return this._FithMissionResult;
			}
			set
			{
				if ((this._FithMissionResult != value))
				{
					this.OnFithMissionResultChanging(value);
					this.SendPropertyChanging();
					this._FithMissionResult = value;
					this.SendPropertyChanged("FithMissionResult");
					this.OnFithMissionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="killedPlayer", Storage="_KilledPlayer", DbType="VarChar(32)")]
		public string KilledPlayer
		{
			get
			{
				return this._KilledPlayer;
			}
			set
			{
				if ((this._KilledPlayer != value))
				{
					this.OnKilledPlayerChanging(value);
					this.SendPropertyChanging();
					this._KilledPlayer = value;
					this.SendPropertyChanged("KilledPlayer");
					this.OnKilledPlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_Participation", Storage="_Participations", ThisKey="GameId", OtherKey="GameId")]
		public EntitySet<Participation> Participations
		{
			get
			{
				return this._Participations;
			}
			set
			{
				this._Participations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_Game", Storage="_Player", ThisKey="KilledPlayer", OtherKey="PlayerName", IsForeignKey=true)]
		public Player Player
		{
			get
			{
				return this._Player.Entity;
			}
			set
			{
				Player previousValue = this._Player.Entity;
				if (((previousValue != value) 
							|| (this._Player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Player.Entity = null;
						previousValue.Games.Remove(this);
					}
					this._Player.Entity = value;
					if ((value != null))
					{
						value.Games.Add(this);
						this._KilledPlayer = value.PlayerName;
					}
					else
					{
						this._KilledPlayer = default(string);
					}
					this.SendPropertyChanged("Player");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Participations(Participation entity)
		{
			this.SendPropertyChanging();
			entity.Game = this;
		}
		
		private void detach_Participations(Participation entity)
		{
			this.SendPropertyChanging();
			entity.Game = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gameView")]
	public partial class GameView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _gameId;
		
		private System.DateTime _gameTime;
		
		private System.Nullable<bool> _WonBy;
		
		private System.Nullable<int> _GroupSize;
		
		private bool _firstMissionResult;
		
		private bool _secondMissionResult;
		
		private bool _thirdMissionResult;
		
		private System.Nullable<bool> _fourthMissionResult;
		
		private System.Nullable<bool> _fithMissionResult;
		
		private string _killedPlayer;
		
		private EntitySet<Participation> _Participations;
		
		private EntityRef<Player> _Player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameIdChanging(int value);
    partial void OnGameIdChanged();
    partial void OnGameTimeChanging(System.DateTime value);
    partial void OnGameTimeChanged();
    partial void OnWonByChanging(System.Nullable<bool> value);
    partial void OnWonByChanged();
    partial void OnGroupSizeChanging(System.Nullable<int> value);
    partial void OnGroupSizeChanged();
    partial void OnFirstMissionResultChanging(bool value);
    partial void OnFirstMissionResultChanged();
    partial void OnSecondMissionResultChanging(bool value);
    partial void OnSecondMissionResultChanged();
    partial void OnThirdMissionResultChanging(bool value);
    partial void OnThirdMissionResultChanged();
    partial void OnFourthMissionResultChanging(System.Nullable<bool> value);
    partial void OnFourthMissionResultChanged();
    partial void OnFithMissionResultChanging(System.Nullable<bool> value);
    partial void OnFithMissionResultChanged();
    partial void OnKilledPlayerChanging(string value);
    partial void OnKilledPlayerChanged();
    #endregion
		
		public GameView()
		{
			this._Participations = new EntitySet<Participation>(new Action<Participation>(this.attach_Participations), new Action<Participation>(this.detach_Participations));
			this._Player = default(EntityRef<Player>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gameId", Storage="_gameId", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GameId
		{
			get
			{
				return this._gameId;
			}
			set
			{
				if ((this._gameId != value))
				{
					this.OnGameIdChanging(value);
					this.SendPropertyChanging();
					this._gameId = value;
					this.SendPropertyChanged("GameId");
					this.OnGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gameTime", Storage="_gameTime", DbType="DateTime NOT NULL")]
		public System.DateTime GameTime
		{
			get
			{
				return this._gameTime;
			}
			set
			{
				if ((this._gameTime != value))
				{
					this.OnGameTimeChanging(value);
					this.SendPropertyChanging();
					this._gameTime = value;
					this.SendPropertyChanged("GameTime");
					this.OnGameTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WonBy", DbType="Bit")]
		public System.Nullable<bool> WonBy
		{
			get
			{
				return this._WonBy;
			}
			set
			{
				if ((this._WonBy != value))
				{
					this.OnWonByChanging(value);
					this.SendPropertyChanging();
					this._WonBy = value;
					this.SendPropertyChanged("WonBy");
					this.OnWonByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupSize", DbType="Int")]
		public System.Nullable<int> GroupSize
		{
			get
			{
				return this._GroupSize;
			}
			set
			{
				if ((this._GroupSize != value))
				{
					this.OnGroupSizeChanging(value);
					this.SendPropertyChanging();
					this._GroupSize = value;
					this.SendPropertyChanged("GroupSize");
					this.OnGroupSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="firstMissionResult", Storage="_firstMissionResult", DbType="Bit NOT NULL")]
		public bool FirstMissionResult
		{
			get
			{
				return this._firstMissionResult;
			}
			set
			{
				if ((this._firstMissionResult != value))
				{
					this.OnFirstMissionResultChanging(value);
					this.SendPropertyChanging();
					this._firstMissionResult = value;
					this.SendPropertyChanged("FirstMissionResult");
					this.OnFirstMissionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="secondMissionResult", Storage="_secondMissionResult", DbType="Bit NOT NULL")]
		public bool SecondMissionResult
		{
			get
			{
				return this._secondMissionResult;
			}
			set
			{
				if ((this._secondMissionResult != value))
				{
					this.OnSecondMissionResultChanging(value);
					this.SendPropertyChanging();
					this._secondMissionResult = value;
					this.SendPropertyChanged("SecondMissionResult");
					this.OnSecondMissionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="thirdMissionResult", Storage="_thirdMissionResult", DbType="Bit NOT NULL")]
		public bool ThirdMissionResult
		{
			get
			{
				return this._thirdMissionResult;
			}
			set
			{
				if ((this._thirdMissionResult != value))
				{
					this.OnThirdMissionResultChanging(value);
					this.SendPropertyChanging();
					this._thirdMissionResult = value;
					this.SendPropertyChanged("ThirdMissionResult");
					this.OnThirdMissionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fourthMissionResult", Storage="_fourthMissionResult", DbType="Bit")]
		public System.Nullable<bool> FourthMissionResult
		{
			get
			{
				return this._fourthMissionResult;
			}
			set
			{
				if ((this._fourthMissionResult != value))
				{
					this.OnFourthMissionResultChanging(value);
					this.SendPropertyChanging();
					this._fourthMissionResult = value;
					this.SendPropertyChanged("FourthMissionResult");
					this.OnFourthMissionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fithMissionResult", Storage="_fithMissionResult", DbType="Bit")]
		public System.Nullable<bool> FithMissionResult
		{
			get
			{
				return this._fithMissionResult;
			}
			set
			{
				if ((this._fithMissionResult != value))
				{
					this.OnFithMissionResultChanging(value);
					this.SendPropertyChanging();
					this._fithMissionResult = value;
					this.SendPropertyChanged("FithMissionResult");
					this.OnFithMissionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="killedPlayer", Storage="_killedPlayer", DbType="VarChar(32)")]
		public string KilledPlayer
		{
			get
			{
				return this._killedPlayer;
			}
			set
			{
				if ((this._killedPlayer != value))
				{
					this.OnKilledPlayerChanging(value);
					this.SendPropertyChanging();
					this._killedPlayer = value;
					this.SendPropertyChanged("KilledPlayer");
					this.OnKilledPlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameView_Participation", Storage="_Participations", ThisKey="GameId", OtherKey="GameId")]
		public EntitySet<Participation> Participations
		{
			get
			{
				return this._Participations;
			}
			set
			{
				this._Participations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_GameView", Storage="_Player", ThisKey="KilledPlayer", OtherKey="PlayerName", IsForeignKey=true)]
		public Player Player
		{
			get
			{
				return this._Player.Entity;
			}
			set
			{
				Player previousValue = this._Player.Entity;
				if (((previousValue != value) 
							|| (this._Player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Player.Entity = null;
						previousValue.GameViews.Remove(this);
					}
					this._Player.Entity = value;
					if ((value != null))
					{
						value.GameViews.Add(this);
						this._killedPlayer = value.PlayerName;
					}
					else
					{
						this._killedPlayer = default(string);
					}
					this.SendPropertyChanged("Player");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Participations(Participation entity)
		{
			this.SendPropertyChanging();
			entity.GameView = this;
		}
		
		private void detach_Participations(Participation entity)
		{
			this.SendPropertyChanging();
			entity.GameView = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.player")]
	public partial class Player : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PlayerName;
		
		private string _FirstName;
		
		private EntitySet<Participation> _Participations;
		
		private EntitySet<Game> _Games;
		
		private EntitySet<GameView> _GameViews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlayerNameChanging(string value);
    partial void OnPlayerNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    #endregion
		
		public Player()
		{
			this._Participations = new EntitySet<Participation>(new Action<Participation>(this.attach_Participations), new Action<Participation>(this.detach_Participations));
			this._Games = new EntitySet<Game>(new Action<Game>(this.attach_Games), new Action<Game>(this.detach_Games));
			this._GameViews = new EntitySet<GameView>(new Action<GameView>(this.attach_GameViews), new Action<GameView>(this.detach_GameViews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="playerName", Storage="_PlayerName", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this.OnPlayerNameChanging(value);
					this.SendPropertyChanging();
					this._PlayerName = value;
					this.SendPropertyChanged("PlayerName");
					this.OnPlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="firstName", Storage="_FirstName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_Participation", Storage="_Participations", ThisKey="PlayerName", OtherKey="PlayerName")]
		public EntitySet<Participation> Participations
		{
			get
			{
				return this._Participations;
			}
			set
			{
				this._Participations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_Game", Storage="_Games", ThisKey="PlayerName", OtherKey="KilledPlayer")]
		public EntitySet<Game> Games
		{
			get
			{
				return this._Games;
			}
			set
			{
				this._Games.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_GameView", Storage="_GameViews", ThisKey="PlayerName", OtherKey="KilledPlayer")]
		public EntitySet<GameView> GameViews
		{
			get
			{
				return this._GameViews;
			}
			set
			{
				this._GameViews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Participations(Participation entity)
		{
			this.SendPropertyChanging();
			entity.Player = this;
		}
		
		private void detach_Participations(Participation entity)
		{
			this.SendPropertyChanging();
			entity.Player = null;
		}
		
		private void attach_Games(Game entity)
		{
			this.SendPropertyChanging();
			entity.Player = this;
		}
		
		private void detach_Games(Game entity)
		{
			this.SendPropertyChanging();
			entity.Player = null;
		}
		
		private void attach_GameViews(GameView entity)
		{
			this.SendPropertyChanging();
			entity.Player = this;
		}
		
		private void detach_GameViews(GameView entity)
		{
			this.SendPropertyChanging();
			entity.Player = null;
		}
	}
}
#pragma warning restore 1591
